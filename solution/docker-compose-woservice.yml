x-superset-image: &superset-image apachesuperset.docker.scarf.sh/apache/superset:${TAG:-latest-dev}
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

services:
#  postgres:
#    image: postgres:15
#    container_name: postgres
#    environment:
#      POSTGRES_DB: "postgres"
#      POSTGRES_USER: "postgres"
#      POSTGRES_PASSWORD: "root"
#    ports:
#      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rmuser"
      RABBITMQ_DEFAULT_PASS: "rmpassword"
    ports:
      - "15672:15672"
      - "5672:5672"

  minio:
    image: docker.io/bitnami/minio:2025
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_DEFAULT_BUCKETS: "bucket"
    volumes:
      - 'minio_data:/bitnami/minio/data'

  redis:
    image: redis:7
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file:
      - docker/.env
    image: postgres:15
    container_name: superset_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file:
      - docker/.env
    image: *superset-image
    container_name: superset_app
    command: [ "/app/docker/docker-bootstrap.sh", "app-gunicorn" ]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on:
      superset-init:
        condition: service_completed_successfully
    volumes: *superset-volumes
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: [ "/app/docker/docker-init.sh" ]
    env_file:
      - docker/.env
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    user: "root"
    volumes: *superset-volumes
    environment:
      SUPERSET_LOAD_EXAMPLES: "no"
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: [ "/app/docker/docker-bootstrap.sh", "worker" ]
    env_file:
      - docker/.env
    restart: unless-stopped
    depends_on:
      superset-init:
        condition: service_completed_successfully
    user: "root"
    volumes: *superset-volumes
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
        ]
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: [ "/app/docker/docker-bootstrap.sh", "beat" ]
    env_file:
      - docker/.env
    restart: unless-stopped
    depends_on:
      superset-init:
        condition: service_completed_successfully
    user: "root"
    volumes: *superset-volumes
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

volumes:
    minio_data:
      driver: local
    superset_home:
      external: false
    db_home:
      external: false
    redis:
      external: false