openapi: "3.1.0"
info:
  title: SUPERADVERTISING - 3300
  version: "1.0.0"
  description: >
    API для управления данными клиентов, рекламодателей, рекламными кампаниями,
    показом объявлений, статистикой и управлением "текущим днём" в системе.

tags:
  - name: Clients
    description: 'Управление клиентами: создание и обновление информации о клиентах.'
  - name: Advertisers
    description: Управление рекламодателями и ML скорами для определения релевантности.
  - name: Campaigns
    description: 'Управление рекламными кампаниями: создание, обновление, удаление и получение списка кампаний.'
  - name: Ads
    description: Показ рекламных объявлений клиентам и фиксация кликов.
  - name: Moderation
    description: Модерация текстов в рекламных кампаниях
  - name: Statistics
    description: Получение статистики по кампаниям и рекламодателям, а также ежедневной статистики.
  - name: Time
    description: Управление текущим днём (эмуляция времени) в системе.

paths:
  /ads:
    get:
      tags:
        - Ads
      description: ""
      parameters:
        - name: "client_id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad client_id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Ad not found"
                Example#2:
                  description: ""
                  value:
                    error: "Client not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetAdResponseModel"
  /ads/{adId}/click:
    post:
      tags:
        - Ads
      description: ""
      parameters:
        - name: "adId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClickRequestModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad client_id"
                Example#2:
                  description: ""
                  value:
                    error: "Bad adId"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Не было просмотра рекламы"
        "429":
          description: "Too Many Requests"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "You cannot click above the limit"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /advertisers/bulk:
    post:
      tags:
        - Advertisers
      summary: Массовое создание/обновление рекламодателей
      description: Создаёт новых или обновляет существующих рекламодателей
      operationId: upsertAdvertisers
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              items:
                $ref: "#/components/schemas/AdvertisersRequestResponseModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Unknown advertiser error"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AdvertisersRequestResponseModel"
  /advertisers/{advertiserId}:
    get:
      tags:
        - Advertisers
      summary: Получение рекламодателя по ID
      description: Возвращает информацию о рекламодателе по его ID.
      operationId: getAdvertiserById
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Advertiser not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AdvertisersRequestResponseModel"
  /advertisers/{advertiserId}/campaigns:
    get:
      tags:
        - Campaigns
      summary: Получение рекламных кампаний рекламодателя c пагинацией
      description: Возвращает список рекламных кампаний для указанного рекламодателя с пагинацией.
      operationId: listCampaigns
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "size"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad pagination"
                Example#2:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Advertiser not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetCampaignResponseModel"
    post:
      tags:
        - Campaigns
      summary: Создание рекламной кампании
      description: Создаёт новую рекламную кампанию для указанного рекламодателя.
      operationId: createCampaign
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCampaignRequestModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Unknown campaign error."
                Example#2:
                  description: ""
                  value:
                    error: "В тексте содержатся запрещенные слова."
                Example#3:
                  description: ""
                  value:
                    error: "Invalid request data"
                Example#4:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Advertiser not found"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetCampaignResponseModel"
  /advertisers/{advertiserId}/campaigns/{campaignId}:
    get:
      tags:
        - Campaigns
      summary: Получение кампании по ID
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#2:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign with this advertiser not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetCampaignResponseModel"
    put:
      tags:
        - Campaigns
      summary: Обновление рекламной кампании
      description: Обновляет разрешённые параметры рекламной кампании до её старта.
      operationId: updateCampaign
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      requestBody:
        description: Объект с обновлёнными данными рекламной кампании.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignUpdate'

      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Unknown campaign error."
                Example#2:
                  description: ""
                  value:
                    error: "В тексте содержатся запрещенные слова."
                Example#3:
                  description: ""
                  value:
                    error: "Bad update data"
                Example#4:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#5:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign with this advertiser not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetCampaignResponseModel"
    delete:
      tags:
        - Campaigns
      summary: Удаление рекламной кампании
      description: Удаляет рекламную кампанию рекламодателя по заданному campaignId.
      operationId: deleteCampaign
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#2:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign with this advertiser not found"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /advertisers/{advertiserId}/campaigns/{campaignId}/generatetext:
    post:
      tags:
        - Campaigns
      summary: "Генерация текста по заголовку кампании и рекламодателю"
      description: "Т.к генерация происходит не моментально, запрос на генерацию встает в очередь и после сразу применяется в тексте рекламной кампании"
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Something went wrong"
                Example#2:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#3:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign with this advertiser not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Map_String"
  /advertisers/{advertiserId}/campaigns/{campaignId}/image:
    get:
      tags:
        - Campaigns
      summary: "Получить изображение для рекламы"
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#2:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Image does not exist"
                Example#2:
                  description: ""
                  value:
                    error: "Image OR Campaign with this advertiser not found"
        "200":
          description: "Ok"
          content:
            'image/jpeg':
              schema:
                type: string
                format: binary

    post:
      summary: "Добавить или изменить изображение для рекламы"
      tags:
        - Campaigns
      description: ""
      requestBody:
        content:
          'image/*':
            schema:
              type: string
              format: binary

      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "Content-Type"
          in: "header"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Only images is supported"
                Example#2:
                  description: ""
                  value:
                    error: "Something went wrong"
                Example#3:
                  description: ""
                  value:
                    error: "Bad campaignId"
                Example#4:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign with this advertiser not found"
        "413":
          description: "Payload Too Large"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Image too large. 5MB max"
        "200":
          description: "OK"
  /clients/bulk:
    post:
      tags:
        - Clients
      summary: Массовое создание/обновление клиентов
      description: Создаёт новых или обновляет существующих клиентов
      operationId: upsertClients
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              items:
                $ref: "#/components/schemas/ClientResponseRequestModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Unknown client error"
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ClientResponseRequestModel"
  /clients/{clientId}:
    get:
      tags:
        - Clients
      summary: Получение клиента по ID
      description: Возвращает информацию о клиенте по его ID.
      operationId: getClientById
      parameters:
        - name: "clientId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Client not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientResponseRequestModel"
  /ml-scores:
    post:
      tags:
        - Advertisers
      summary: Добавление или обновление ML скора
      description: Добавляет или обновляет ML скор для указанной пары клиент-рекламодатель.
      operationId: upsertMLScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMLScoreModel"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad data"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Something wasn't found right"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /moderation:
    post:
      tags:
        - Moderation
      summary: "Выключатель системы модерации"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModerationSwitchRequestModel"
        required: true
      responses:
        "200":
          description: "OK"


  /moderation/addrestrictedwords:
    post:
      tags:
        - Moderation
      summary: "Добавление слов в фильтр."
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "string"
        required: true
      responses:
        "201":
          description: "Created"
  /stats/advertisers/{advertiserId}/campaigns:
    get:
      tags:
        - Statistics
      summary: Получение агрегированной статистики по всем кампаниям рекламодателя
      description: Возвращает сводную статистику по всем рекламным кампаниям, принадлежащим заданному рекламодателю.
      operationId: getAdvertiserCampaignsStats
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StatsResponseModel"
  /stats/advertisers/{advertiserId}/campaigns/daily:
    get:
      tags:
        - Statistics
      summary: Получение ежедневной агрегированной статистики по всем кампаниям рекламодателя
      description: Возвращает массив ежедневной сводной статистики по всем рекламным кампаниям заданного рекламодателя.
      operationId: getAdvertiserDailyStats
      parameters:
        - name: "advertiserId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad advertiserId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/DailyStatsResponseModel"
  /stats/campaigns/{campaignId}:
    get:
      tags:
        - Statistics
      summary: Получение статистики по рекламной кампании
      description: Возвращает агрегированную статистику (показы, переходы, затраты и конверсию) для заданной рекламной кампании.
      operationId: getCampaignStats
      parameters:
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad campaignId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StatsResponseModel"
  /stats/campaigns/{campaignId}/daily:
    get:
      tags:
        - Statistics
      summary: Получение ежедневной статистики по рекламной кампании
      description: Возвращает массив ежедневной статистики для указанной рекламной кампании.
      operationId: getCampaignDailyStats
      parameters:
        - name: "campaignId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Bad campaignId"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    error: "Campaign not found"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/DailyStatsResponseModel"
  /time/advance:
    post:
      tags:
        - Time
      summary: Установка текущей даты
      description: Устанавливает текущий день в системе в заданную дату.
      operationId: advanceDay
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CurrentTimeModel"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CurrentTimeModel"
components:
  schemas:
    CampaignUpdate:
      type: object
      description: Объект для обновления параметров кампании, которые разрешено изменять до старта кампании.
      properties:
        impressions_limit:
          type: integer
          description: Задаёт лимит показов для рекламного объявления.
        clicks_limit:
          type: integer
          description: Задаёт лимит переходов для рекламного объявления.
        cost_per_impression:
          type: number
          format: float
          description: Новая стоимость одного показа объявления.
        cost_per_click:
          type: number
          format: float
          description: Новая стоимость одного перехода (клика) по объявлению.
        ad_title:
          type: string
          description: Новое название рекламного объявления.
        ad_text:
          type: string
          description: Новый текст рекламного объявления.
        start_date:
          type: integer
          format: int32
          description: День начала показа рекламного объявления (включительно).
        end_date:
          type: integer
          format: int32
          description: День окончания показа рекламного объявления (включительно).
        targeting:
          $ref: '#/components/schemas/Targeting'
          description: Новые параметры таргетирования для рекламной кампании.
    Targeting:
      type: object
      description: Объект, описывающий настройки таргетирования для рекламной кампании.
      properties:
        gender:
          type: string
          enum: [ MALE, FEMALE, ALL ]
          nullable: true
          description: Пол аудитории для показа объявления (MALE, FEMALE или ALL).
        age_from:
          type: integer
          nullable: true
          description: Минимальный возраст аудитории (включительно) для показа объявления.
        age_to:
          type: integer
          nullable: true
          description: Максимальный возраст аудитории (включительно) для показа объявления.
        location:
          type: string
          nullable: true
          description: Локация аудитории, для которой будет показано объявление.
    ErrorResponse:
      type: "object"
      properties:
        error:
          type: "string"
      required:
        - "error"
    GetAdResponseModel:
      type: "object"
      properties:
        ad_id:
          type: "string"
        ad_title:
          type: "string"
        ad_description:
          type: "string"
        advertiser_id:
          type: "string"
      required:
        - "ad_id"
        - "ad_title"
        - "ad_description"
        - "advertiser_id"
    ClickRequestModel:
      type: "object"
      properties:
        client_id:
          type: "string"
      required:
        - "client_id"
    AdvertisersRequestResponseModel:
      type: "object"
      properties:
        advertiser_id:
          type: "string"
        name:
          type: "string"
    TargetResponseModel:
      type: "object"
      properties:
        gender:
          type: "string"
        age_from:
          type: "integer"
          format: "int32"
        age_to:
          type: "integer"
          format: "int32"
        location:
          type: "string"
    GetCampaignResponseModel:
      type: "object"
      properties:
        campaign_id:
          type: "string"
        advertiser_id:
          type: "string"
        impressions_limit:
          type: "integer"
          format: "int32"
        clicks_limit:
          type: "integer"
          format: "int32"
        cost_per_impression:
          type: "number"
          format: "float"
        cost_per_click:
          type: "number"
          format: "float"
        ad_title:
          type: "string"
        ad_text:
          type: "string"
        start_date:
          type: "integer"
          format: "int32"
        end_date:
          type: "integer"
          format: "int32"
        targeting:
          $ref: "#/components/schemas/TargetResponseModel"
      required:
        - "campaign_id"
        - "advertiser_id"
        - "ad_title"
        - "ad_text"
        - "targeting"
    CreateCampaignRequestModel:
      type: "object"
      properties:
        impressions_limit:
          type: "integer"
          format: "int32"
        clicks_limit:
          type: "integer"
          format: "int32"
        cost_per_impression:
          type: "number"
          format: "float"
        cost_per_click:
          type: "number"
          format: "float"
        ad_title:
          type: "string"
        ad_text:
          type: "string"
        start_date:
          type: "integer"
          format: "int32"
        end_date:
          type: "integer"
          format: "int32"
        targeting:
          $ref: "#/components/schemas/TargetResponseModel"
      required:
        - "ad_title"
        - "ad_text"
        - "targeting"
    Map:
      type: "object"
      properties: { }
    Map_String:
      type: "string"
    ClientResponseRequestModel:
      type: "object"
      properties:
        client_id:
          type: "string"
        login:
          type: "string"
        age:
          type: "integer"
          format: "int32"
        location:
          type: "string"
        gender:
          type: "string"
    UpdateMLScoreModel:
      type: "object"
      properties:
        client_id:
          type: "string"
        advertiser_id:
          type: "string"
        score:
          type: "integer"
          format: "int32"
    ModerationSwitchRequestModel:
      type: "object"
      properties:
        turn_on:
          type: "boolean"
    StatsResponseModel:
      type: "object"
      properties:
        impressions_count:
          type: "integer"
          format: "int32"
        click_count:
          type: "integer"
          format: "int32"
        conversion:
          type: "number"
          format: "float"
        spent_impressions:
          type: "number"
          format: "float"
        spent_clicks:
          type: "number"
          format: "float"
        spent_total:
          type: "number"
          format: "float"
    DailyStatsResponseModel:
      type: "object"
      properties:
        impressions_count:
          type: "integer"
          format: "int32"
        click_count:
          type: "integer"
          format: "int32"
        conversion:
          type: "number"
          format: "float"
        spent_impressions:
          type: "number"
          format: "float"
        spent_clicks:
          type: "number"
          format: "float"
        spent_total:
          type: "number"
          format: "float"
        date:
          type: "integer"
          format: "int32"
    CurrentTimeModel:
      type: "object"
      properties:
        current_date:
          type: "integer"
          format: "int32"